// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: esp8266_proto/Esp8266_Interface.proto

package com.car_rpc.generated;

public final class Esp8266Proto {
  private Esp8266Proto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Esp8266_Command_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Esp8266_Command_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Esp8266_Full_Request_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Esp8266_Full_Request_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Esp8266_Metrics_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Esp8266_Metrics_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%esp8266_proto/Esp8266_Interface.proto\022" +
      "\007Esp8266\"/\n\007Command\022\025\n\rfrontRotation\030\001 \002" +
      "(\002\022\r\n\005speed\030\002 \002(\002\"E\n\014Full_Request\022!\n\007com" +
      "mand\030\001 \002(\0132\020.Esp8266.Command\022\022\n\npowerSta" +
      "te\030\002 \002(\010\"e\n\007Metrics\022\035\n\025HCSR04_front_dist" +
      "ance\030\001 \002(\005\022\034\n\024HCSR04_left_distance\030\002 \002(\005" +
      "\022\035\n\025HCSR04_right_distance\030\003 \002(\005B\'\n\025com.c" +
      "ar_rpc.generatedB\014Esp8266ProtoP\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Esp8266_Command_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Esp8266_Command_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Esp8266_Command_descriptor,
        new java.lang.String[] { "FrontRotation", "Speed", });
    internal_static_Esp8266_Full_Request_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_Esp8266_Full_Request_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Esp8266_Full_Request_descriptor,
        new java.lang.String[] { "Command", "PowerState", });
    internal_static_Esp8266_Metrics_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_Esp8266_Metrics_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Esp8266_Metrics_descriptor,
        new java.lang.String[] { "HCSR04FrontDistance", "HCSR04LeftDistance", "HCSR04RightDistance", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
