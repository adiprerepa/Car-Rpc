// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: esp8266_proto/Esp8266_Interface.proto

package com.prerepa.generated;

public final class Esp8266Proto {
  private Esp8266Proto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_esp8266_Esp8266_Command_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_esp8266_Esp8266_Command_fieldAccessorTable;
  static final com.google.protobuf.Descriptors.Descriptor
    internal_static_esp8266_Esp8266_Metrics_descriptor;
  static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_esp8266_Esp8266_Metrics_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%esp8266_proto/Esp8266_Interface.proto\022" +
      "\007esp8266\"\273\001\n\017Esp8266_Command\022=\n\tdirectio" +
      "n\030\001 \002(\0162*.esp8266.Esp8266_Command.Esp826" +
      "6_Direction\"i\n\021Esp8266_Direction\022\021\n\rMOTO" +
      "R_FORWARD\020\000\022\016\n\nMOTOR_BACK\020\001\022\017\n\013WHEELS_LE" +
      "FT\020\002\022\020\n\014WHEELS_RIGHT\020\003\022\016\n\nKEEP_ALIVE\020\004\"\220" +
      "\002\n\017Esp8266_Metrics\022\030\n\020hcsr04_calibrate\030\001" +
      " \002(\001\022H\n\nreturnCode\030\002 \002(\01624.esp8266.Esp82" +
      "66_Metrics.Esp8266_Return_Status_Codes\"\230" +
      "\001\n\033Esp8266_Return_Status_Codes\022\025\n\021MALFOR",
      "MED_COMMAND\020\000\022+\n\'COULD_NOT_EXECUTE_UNABL" +
      "E_TO_SEND_TO_CAR\020\001\022#\n\037COULD_NOT_EXECUTE_" +
      "RUNTIME_ERROR\020\002\022\020\n\014OPERATION_OK\020\003B\'\n\025com" +
      ".prerepa.generatedB\014Esp8266ProtoP\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_esp8266_Esp8266_Command_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_esp8266_Esp8266_Command_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_esp8266_Esp8266_Command_descriptor,
        new java.lang.String[] { "Direction", });
    internal_static_esp8266_Esp8266_Metrics_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_esp8266_Esp8266_Metrics_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_esp8266_Esp8266_Metrics_descriptor,
        new java.lang.String[] { "Hcsr04Calibrate", "ReturnCode", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
